generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int          @id @default(autoincrement())
  username         String       @unique
  email            String       @unique
  password         String
  role             Role         @default(EDITOR)
  resetToken       String?
  resetTokenExpiry DateTime?
  createdAt        DateTime     @default(now())
  updatedAt        DateTime     @updatedAt
  investments      Investment[]
  news             News[]
  Project          Project[]
}

model AdministrativeProcedure {
  id             Int      @id @default(autoincrement())
  title          String
  description    String
  icon           String?
  requiredDocs   String
  processingTime Int
  category       String
  onlineUrl      String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}
model Gallery {
  id        String   @id @default(uuid())
  title     String
  mediaUrl  String
  type      MediaType
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum MediaType {
  IMAGE
  VIDEO
}



model Service {
  id          Int      @id @default(autoincrement())
  category    Category
  title       String
  icon        String
  description String
  image       String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
}

model News {
  id        Int      @id @default(autoincrement())
  title     String
  content   String
  image     String?
  category  String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
}

model Project {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  status      String
  startDate   DateTime
  endDate     DateTime?
  budget      String?
  image       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  managerId   Int
  manager     User      @relation(fields: [managerId], references: [id])
}

model Investment {
  id               Int      @id @default(autoincrement())
  title            String
  category         String
  description      String
  shortDescription String?
  amount           String
  startYear        String?
  endYear          String?
  status           String
  image            String?
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  managerId        Int?
  manager          User?    @relation(fields: [managerId], references: [id])
}

enum Role {
  ADMIN
  EDITOR
  VIEWER
}

enum Category {
  EDUCATION
  SANTE
  INFRASTRUCTURES
}
